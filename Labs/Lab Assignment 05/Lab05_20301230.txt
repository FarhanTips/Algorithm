
Assignment 05  (CSE220)  FALL'21
Farhan Akbor Khan
ID: 20301230
Section: 08



####Task 1
###a

def factor(num):
    if (num==0 or num==1):
        return 1
    return num*factor(num-1)

print(factor(4))


###b

def Fibonacci(index):
    if index==0:
        return 0
    elif index==1:
        return 1
    else:
        return Fibonacci(index-1)+Fibonacci(index-2)
print(Fibonacci(9))


###c

def forward(list,index):
    if len(list)==0:
        print("Empty List")
    elif len(list)==index:
        return
    else:
        print(list[index])
        forward(list,index+1)

a=[10,20,30,40,50]
forward(a,0)


###d

def exponent(a,n):
    if n==0:
        return 1
    else:
        m=exponent(a,n-1)
        return m*a
print(exponent(3,3))



####Task 2
###a

def dec_to_bin(num):
    if num==0:
        return 0
    else:
        return num % 2 +10 * dec_to_bin(num//2)
a=3
print("Decimal:",a,", Corresponding Binary:",dec_to_bin(a))


###b and c  (together)

class Node:
    def __init__(self, v, n):
        self.value=v
        self.next = n

class LinkedList:
    def __init__(self,a=None):
        self.head=None
        self.tail=None
        for i in a:
            newNode=Node(i,None)
            if self.head==None:
                self.head=newNode
                self.tail=newNode
            else:
                self.tail.next=newNode
                self.tail= newNode

def sum(head):
    n=head
    if n==None:
        return 0
    return n.value + sum(n.next)

def reverse(head):
    n=head
    if n==None:
        return
    reverse(n.next)
    print(n.value)

###Tester Class
array=[10,20,30,40,50]
l=LinkedList(array)
print(sum(l.head))
reverse(l.head)



####Task 3

def hocBuilder(height):
    if height==0:
        return "Cannot Build"
    elif height==1:
        return 8
    else:
        return 5 + hocBuilder(height-1)
print("Cards Needed To Build:",hocBuilder(7))


####Task 4
###a

def left(num,index=1):
    if index>num:
        return
    else:
        for i in range(1,index+1):
            print(i,end=" ")
        print()
        return left(num,index+1)
left(5)


###b

def right(num,index=0):
    if index>=num:
        return
    else:
        printing_var=1
        for i in range(1,num+1):
            if i >= (num-index):
                print(printing_var,end=" ")
                printing_var+=1
            else:
                print(" ",end=" ")
        print()
    return right(num,index+1)
right(5)



####Task 5

class FinalQ:
    def print(self,array,idx):
        if(idx<len(array)):
            profit = self.calcProfit(array[idx])
            print("Investment:",array[idx],"; Profit:",profit)
            self.print(array,idx+1)
    def calcProfit(self,investment):
        if 25000<investment<=100000:
            investment-=100
            return 4.5 + self.calcProfit(investment)
        elif investment>100000:
            investment-=10000
            return 800 + self.calcProfit(investment)
        else:
            return 0

###Tester
array = [25000, 100000, 250000, 350000]
f = FinalQ()
f.print(array, 0)
